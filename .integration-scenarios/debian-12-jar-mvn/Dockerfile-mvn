# To execute this script locally, see the run.sh in the same folder
FROM docker.io/debian:bookworm-slim as builder
RUN apt-get update -y && \
    apt-get install -y openjdk-17-jdk-headless maven

#ARG WORK_DIR=/home/ors/openrouteservice
#WORKDIR $WORK_DIR
WORKDIR /home/ors/openrouteservice

# Copy the project files into the container
COPY ors-api ors-api
COPY ors-engine ors-engine
COPY ors-report-aggregation ors-report-aggregation
COPY pom.xml pom.xml
COPY .integration-scenarios/debian-12-jar-mvn/files/config-car-hgv-whe.yml ors-config.yml

# Build the project
RUN mvn -B clean spring-boot:run -DskipTests -Dspring-boot.run.arguments="--ors.engine.preparation_mode=true"



FROM docker.io/debian:bookworm-slim as final

RUN apt-get update -y && \
    apt-get install -y openjdk-17-jdk-headless maven


#ARG WORK_DIR=/home/ors/openrouteservice
ARG CONF_DIR_USER=/root/.config/openrouteservice
ARG CONF_DIR_ETC=/etc/openrouteservice
#ARG TESTFILES_DIR=/testfiles
#ARG TESTSUITES_DIR=/testsuites
#ARG UID=1000
#ARG GID=1000

WORKDIR /home/ors/openrouteservice

COPY --from=builder /home/ors/openrouteservice/ors-api ors-api
COPY --from=builder /home/ors/openrouteservice/ors-engine ors-engine
COPY --from=builder /home/ors/openrouteservice/ors-report-aggregation ors-report-aggregation
COPY --from=builder /home/ors/openrouteservice/pom.xml pom.xml
COPY --from=builder /home/ors/openrouteservice/graphs graphs
COPY --from=builder /root/.m2 /root/.m2


#COPY --from=builder /app/ors-api/src/test/resources/application-test.yml /ors-config.yml
#COPY --from=builder /app/ors-api/src/test/files $WORK_DIR/files

RUN #mkdir -p ors-api
RUN #mkdir -p ors-engine
RUN #mkdir -p ors-report-aggregation
RUN #mkdir -p graphs
RUN mkdir -p "$CONF_DIR_USER"
RUN mkdir -p "$CONF_DIR_ETC"
#RUN mkdir -p "$TESTFILES_DIR"
#RUN mkdir -p "$TESTSUITES_DIR"
RUN #chmod -R 770 /home/ors/openrouteservice
RUN chmod -R 770 "$CONF_DIR_USER"
RUN chmod -R 770 "$CONF_DIR_ETC"
#RUN chmod -R 770 "$TESTFILES_DIR"
#RUN chmod -R 770 "$TESTSUITES_DIR"

ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
#ENV WORK_DIR=$WORK_DIR
#ENV CONF_DIR_USER=$CONF_DIR_USER
#ENV CONF_DIR_ETC=$CONF_DIR_ETC
#ENV TESTFILES_DIR=$TESTFILES_DIR
#ENV TESTSUITES_DIR=$TESTSUITES_DIR

# Expose ports
EXPOSE 8082
# Start systemd with the following command
ENTRYPOINT [ "mvn", "spring-boot:run", "-DskiptTests" ]
#CMD [ "test-find-config-workdir.sh" ]