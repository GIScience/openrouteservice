# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Integration test suite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  TEST_IMAGE_NAME: 'local/tomcat-test:latest'
  BUILD_PLATFORMS: 'linux/amd64'


jobs:
  # This way the env variables are accessible in the individual jobs
  prepare_environment:
    name: Prepare the environment variables
    runs-on: ubuntu-latest
    outputs:
      test_image_name: ${{ env.TEST_IMAGE_NAME }}
      build_platforms: ${{ env.BUILD_PLATFORMS }}
    steps:
      - run: |
          echo "Publish environment variables"
  docker-build-cache:
    name: Docker Buildx cache
    runs-on: ubuntu-latest
    needs: prepare_environment
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache the docker image
        uses: actions/cache@v4
        with:
          path: /tmp/tomcat-test.tar
          key: ${{ runner.os }}-tomcat-test-${{ needs.prepare_environment.outputs.test_image_name }}
          restore-keys: |
            ${{ runner.os }}-tomcat-test-
      - name: Load the docker image from cache if available
        run: |
          if [ -f /tmp/tomcat-test.tar ]; then
              podman load -i /tmp/tomcat-test.tar || echo "Could not load the image from cache. Building it."
          fi
      - name: Build the podman image for changes
        run: |
          ./.integration-scenarios/debian-12-tomcat-war-systemd/run.sh -i ${{ needs.prepare_environment.outputs.test_image_name }}
      - name: Export the podman image again
        run: |
          podman save -o /tmp/tomcat-test.tar docker-daemon:${{ needs.prepare_environment.outputs.test_image_name }}
  debian-12-tomcat-war-systemd:
    name: Run Debian 12 Tomcat WAR systemd integration tests
    runs-on: ubuntu-latest
    needs:
      - prepare_environment
      - docker-build-cache
    strategy:
      matrix:
        scenario: [ '0_*.sh', '1_*.sh', '2_*.sh' ]
        image: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache the docker image
        uses: actions/cache@v4
        with:
          path: /tmp/tomcat-test.tar
          key: ${{ runner.os }}-tomcat-test-${{ needs.prepare_environment.outputs.test_image_name }}
          restore-keys: |
            ${{ runner.os }}-tomcat-test-
      - name: Load the docker image from cache if available
        run: |
          if [ -f /tmp/tomcat-test.tar ]; then
              podman load -i /tmp/tomcat-test.tar || { echo "Could not load the image from cache. Building it."; exit 1; }
          fi
      - name: Run integration tests
        run: ./.integration-scenarios/debian-12-tomcat-war-systemd/run.sh -t -g '${{ matrix.scenario }}'
